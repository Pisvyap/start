vneshnaya narisovatChislo(x: chislo): chislo;
vneshnaya narisovatChisla(x: chislo[]): chislo;

delo quickSort(arr: chislo[], left: chislo, right: chislo): chislo[] {
    esli (left >= right) {
        vernut arr;
    }

    pust pivot: chislo = arr[(left + right) / 2];
    pust index: chislo = partition(arr, left, right, pivot);

    arr = quickSort(arr, left, index - 1);
    arr = quickSort(arr, index, right);

    vernut arr;
}

delo partition(arr: chislo[], left: chislo, right: chislo, pivot: chislo): chislo {
    poka (left <= right) {
        poka (arr[left] < pivot) {
            left = left + 1;
        }

        poka (arr[right] > pivot) {
            right = right - 1;
        }

        esli (left <= right) {
            pust temp: chislo = arr[left];
            arr[left] = arr[right];
            arr[right] = temp;

            left = left + 1;
            right = right - 1;
        }
    }

    vernut left;
}

pust numbers: chislo[] = new chislo[6];
numbers[0] = 3;
numbers[1] = 2;
numbers[2] = 1;
numbers[3] = 8;
numbers[4] = 6;
numbers[5] = 10;
pust sorted: chislo[] = quickSort(numbers, 0, 6);

narisovatChisla(sorted);